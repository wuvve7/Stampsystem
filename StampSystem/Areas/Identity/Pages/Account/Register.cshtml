@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<h1>@ViewData["Title"]</h1>
<div asp-validation-summary="All" class="text-danger" role="alert"></div>


<div class="row">
    <div class="col-md-4">
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h2>Create a new account.</h2>
            <hr />
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                <label asp-for="Input.Email">Email</label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.Password">Password</label>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.ConfirmPassword">Confirm Password</label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.NationalID" class="form-control" placeholder="National ID" />
                <label asp-for="Input.NationalID">National ID</label>
                <span asp-validation-for="Input.NationalID" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.FullName" class="form-control" placeholder="Full Name" />
                <label asp-for="Input.FullName">Full Name</label>
                <span asp-validation-for="Input.FullName" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.PhoneNumber" class="form-control" placeholder="Phone Number" />
                <label asp-for="Input.PhoneNumber">Phone Number</label>
                <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
            </div>
           
            <div class="form-floating mb-3">
                <select asp-for="Input.Role"
						asp-items="@Model.RoleList"
						class="form-select"
                        id="Input_Role">
                    <option value="" disabled selected>-- Select Role --</option>
                </select>
            </div>
            <!-- Dropdown للإدارة -->
            <div class="form-floating mb-3" id="adminDropdownDiv">
                <select asp-for="Input.AdministrationId" asp-items="@Model.AdministrationList" class="form-select">
                    <option value="">-- اختر الإدارة --</option>
                </select>
                <label asp-for="Input.AdministrationId">الإدارة</label>
                <span asp-validation-for="Input.AdministrationName" class="text-danger"></span>
            </div>

            <!-- Textbox للإدارة -->
            <div class="form-floating mb-3" id="adminInputDiv">
                <input asp-for="Input.AdministrationName" class="form-control" placeholder="اسم الإدارة" />
                <label asp-for="Input.AdministrationName">اسم الإدارة</label>
                <span asp-validation-for="Input.AdministrationName" class="text-danger"></span>
            </div>

            <!-- Dropdown للقسم -->
            <div class="form-floating mb-3" id="sectionDropdownDiv">
                <select asp-for="Input.SectionId" asp-items="@Model.SectionList" class="form-select">
                    <option value="">-- اختر القسم --</option>
                </select>
                <label asp-for="Input.SectionId">القسم</label>
                <span asp-validation-for="Input.SectionId" class="text-danger"></span>
            </div>

            <!-- Textbox للقسم -->
            <div class="form-floating mb-3" id="sectionInputDiv">
                <input asp-for="Input.SectionName" class="form-control" placeholder="اسم القسم" />
                <label asp-for="Input.SectionName">اسم القسم</label>
                <span asp-validation-for="Input.SectionName" class="text-danger"></span>
            </div>


            <!-- وحدة -->
            <div class="form-floating mb-3" id="unitInputDiv">
                <input asp-for="Input.UnitName" class="form-control" placeholder="Unit" />
                <label asp-for="Input.UnitName">Unit name</label>
                <span asp-validation-for="Input.UnitName" class="text-danger"></span>
            </div>
            <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
        </form>
    </div>
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h3>Use another service to register.</h3>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">
                                article
                                about setting up this ASP.NET application to support logging in via external services
                            </a>.
                        </p>
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins!)
                                {
                                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const roleSelect = document.getElementById("Input_Role");

            const adminDropdownDiv = document.getElementById("adminDropdownDiv");
            const adminInputDiv = document.getElementById("adminInputDiv");

            const sectionDropdownDiv = document.getElementById("sectionDropdownDiv");
            const sectionInputDiv = document.getElementById("sectionInputDiv");

            const unitInputDiv = document.getElementById("unitInputDiv");

            function hideAll() {
                adminDropdownDiv.style.display = "none";
                adminInputDiv.style.display = "none";
                sectionDropdownDiv.style.display = "none";
                sectionInputDiv.style.display = "none";
                unitInputDiv.style.display = "none";
            }

            function updateFields(role) {
                hideAll(); // ← أخفي الكل أولاً

                switch (role) {
                    case "DivisionDirector":
                        adminInputDiv.style.display = "block"; // اسم الإدارة فقط
                        break;
                    case "SectionManager":
                        adminDropdownDiv.style.display = "block"; // اختيار الإدارة
                        sectionInputDiv.style.display = "block"; // كتابة القسم
                        break;
                    case "UnitManager":
                        adminDropdownDiv.style.display = "block"; // اختيار الإدارة
                        sectionDropdownDiv.style.display = "block"; // اختيار القسم
                        unitInputDiv.style.display = "block"; // كتابة الوحدة
                        break;
                    // HR أو غيره → ما يظهر شيء
                    default:
                        break;
                }
            }

            // لما المستخدم يغيّر الدور
            roleSelect.addEventListener("change", function () {
                updateFields(this.value);
            });

            // تشغيل أولي لما الصفحة تفتح
            updateFields(roleSelect.value);
        });
    </script>
}


